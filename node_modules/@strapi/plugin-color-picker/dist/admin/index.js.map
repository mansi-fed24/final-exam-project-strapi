{"version":3,"file":"index.js","sources":["../../admin/src/index.ts"],"sourcesContent":["import { ColorPickerIcon } from './components/ColorPickerIcon';\nimport { pluginId } from './pluginId';\nimport { getTrad } from './utils/getTrad';\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  /**\n   * TODO: we need to have the type for StrapiApp done from `@strapi/admin` package.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  register(app: any) {\n    app.customFields.register({\n      name: 'color',\n      pluginId: 'color-picker',\n      type: 'string',\n      icon: ColorPickerIcon,\n      intlLabel: {\n        id: getTrad('color-picker.label'),\n        defaultMessage: 'Color',\n      },\n      intlDescription: {\n        id: getTrad('color-picker.description'),\n        defaultMessage: 'Select any color',\n      },\n      components: {\n        Input: async () =>\n          import('./components/ColorPickerInput').then((module) => ({\n            default: module.ColorPickerInput,\n          })),\n      },\n      options: {\n        advanced: [\n          {\n            intlLabel: {\n              id: getTrad('color-picker.options.advanced.regex'),\n              defaultMessage: 'RegExp pattern',\n            },\n            name: 'regex',\n            type: 'text',\n            defaultValue: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$',\n            description: {\n              id: getTrad('color-picker.options.advanced.regex.description'),\n              defaultMessage: 'The text of the regular expression',\n            },\n          },\n          {\n            sectionTitle: {\n              id: 'global.settings',\n              defaultMessage: 'Settings',\n            },\n            items: [\n              {\n                name: 'required',\n                type: 'checkbox',\n                intlLabel: {\n                  id: getTrad('color-picker.options.advanced.requiredField'),\n                  defaultMessage: 'Required field',\n                },\n                description: {\n                  id: getTrad('color-picker.options.advanced.requiredField.description'),\n                  defaultMessage: \"You won't be able to create an entry if this field is empty\",\n                },\n              },\n            ],\n          },\n        ],\n      },\n    });\n  },\n  async registerTrads({ locales }: { locales: string[] }) {\n    const importedTrads = await Promise.all(\n      locales.map((locale) => {\n        return import(`./translations/${locale}.json`)\n          .then(({ default: data }) => {\n            return {\n              data: prefixPluginTranslations(data, pluginId),\n              locale,\n            };\n          })\n          .catch(() => {\n            return {\n              data: {},\n              locale,\n            };\n          });\n      })\n    );\n\n    return Promise.resolve(importedTrads);\n  },\n};\n"],"names":["register","app","customFields","name","pluginId","type","icon","ColorPickerIcon","intlLabel","id","getTrad","defaultMessage","intlDescription","components","Input","then","module","default","ColorPickerInput","options","advanced","defaultValue","description","sectionTitle","items","registerTrads","locales","importedTrads","Promise","all","map","locale","data","prefixPluginTranslations","catch","resolve"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA,YAAe;AACb;;AAEC;AAEDA,IAAAA,QAAAA,CAAAA,CAASC,GAAQ,EAAA;QACfA,GAAIC,CAAAA,YAAY,CAACF,QAAQ,CAAC;YACxBG,IAAM,EAAA,OAAA;YACNC,QAAU,EAAA,cAAA;YACVC,IAAM,EAAA,QAAA;YACNC,IAAMC,EAAAA,+BAAAA;YACNC,SAAW,EAAA;AACTC,gBAAAA,EAAAA,EAAIC,eAAQ,CAAA,oBAAA,CAAA;gBACZC,cAAgB,EAAA;AAClB,aAAA;YACAC,eAAiB,EAAA;AACfH,gBAAAA,EAAAA,EAAIC,eAAQ,CAAA,0BAAA,CAAA;gBACZC,cAAgB,EAAA;AAClB,aAAA;YACAE,UAAY,EAAA;gBACVC,KAAO,EAAA,UACL,oDAAO,kCAAA,KAAA,CAAiCC,IAAI,CAAC,CAACC,UAAY;AACxDC,4BAAAA,OAAAA,EAASD,OAAOE;yBAClB,CAAA;AACJ,aAAA;YACAC,OAAS,EAAA;gBACPC,QAAU,EAAA;AACR,oBAAA;wBACEZ,SAAW,EAAA;AACTC,4BAAAA,EAAAA,EAAIC,eAAQ,CAAA,qCAAA,CAAA;4BACZC,cAAgB,EAAA;AAClB,yBAAA;wBACAR,IAAM,EAAA,OAAA;wBACNE,IAAM,EAAA,MAAA;wBACNgB,YAAc,EAAA,oCAAA;wBACdC,WAAa,EAAA;AACXb,4BAAAA,EAAAA,EAAIC,eAAQ,CAAA,iDAAA,CAAA;4BACZC,cAAgB,EAAA;AAClB;AACF,qBAAA;AACA,oBAAA;wBACEY,YAAc,EAAA;4BACZd,EAAI,EAAA,iBAAA;4BACJE,cAAgB,EAAA;AAClB,yBAAA;wBACAa,KAAO,EAAA;AACL,4BAAA;gCACErB,IAAM,EAAA,UAAA;gCACNE,IAAM,EAAA,UAAA;gCACNG,SAAW,EAAA;AACTC,oCAAAA,EAAAA,EAAIC,eAAQ,CAAA,6CAAA,CAAA;oCACZC,cAAgB,EAAA;AAClB,iCAAA;gCACAW,WAAa,EAAA;AACXb,oCAAAA,EAAAA,EAAIC,eAAQ,CAAA,yDAAA,CAAA;oCACZC,cAAgB,EAAA;AAClB;AACF;AACD;AACH;AACD;AACH;AACF,SAAA,CAAA;AACF,KAAA;IACA,MAAMc,aAAAA,CAAAA,CAAc,EAAEC,OAAO,EAAyB,EAAA;QACpD,MAAMC,aAAAA,GAAgB,MAAMC,OAAQC,CAAAA,GAAG,CACrCH,OAAQI,CAAAA,GAAG,CAAC,CAACC,MAAAA,GAAAA;AACX,YAAA,OAAO,iCAAM,CAAC,CAAC,eAAe,EAAEA,MAAO,CAAA,KAAK,CAAC,CAAA,CAC1ChB,IAAI,CAAC,CAAC,EAAEE,OAAAA,EAASe,IAAI,EAAE,GAAA;gBACtB,OAAO;AACLA,oBAAAA,IAAAA,EAAMC,kDAAyBD,IAAM5B,EAAAA,iBAAAA,CAAAA;AACrC2B,oBAAAA;AACF,iBAAA;AACF,aAAA,CAAA,CACCG,KAAK,CAAC,IAAA;gBACL,OAAO;AACLF,oBAAAA,IAAAA,EAAM,EAAC;AACPD,oBAAAA;AACF,iBAAA;AACF,aAAA,CAAA;AACJ,SAAA,CAAA,CAAA;QAGF,OAAOH,OAAAA,CAAQO,OAAO,CAACR,aAAAA,CAAAA;AACzB;AACF,CAAE;;;;"}